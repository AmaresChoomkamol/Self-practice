1. Function

ใช้ function declaration แบบปกติ เช่น function multiply1(a, b) {...}
ใช้ function expression แบบ anonymous function เช่น const multiply3 = function(a, b) {...}
ใช้ arrow function เช่น const multiply2 = (a, b) => a * b ถ้าใช้บรรทัดเดียว ไม่ต้องมี {} และไม่ต้อง return

2. การส่งค่า function เป็น parameter

function สามารถรับ function อื่นเป็น parameter ได้ เช่น doSomething(multiply1) 
หรือ return function ออกมา เช่น doSomething1() return sayGoodBye

3. Higher-Order Function

function ที่รับหรือคืนค่า function เช่น doSomething1() ถือว่าเป็น higher-order เพราะคืนค่า function

4. default parameter

function กำหนดค่าเริ่มต้นให้ parameter เช่น function who(name = 'unknown') 
ใช้ค่า default เพื่อกัน error ถ้าไม่ได้ส่งค่าเข้ามา

5. rest parameter และ arguments

...z คือ rest parameter รองรับค่าที่ส่งเข้ามาหลายตัวแบบ array
arguments เป็น object-like ที่เก็บค่าที่ส่งเข้ามาใน function แม้ไม่ได้ระบุไว้ใน parameter

6. spread operator

ส่ง array เข้าเป็น argument ได้แบบกระจาย เช่น sum2(...nums) ช่วยให้ array แยกออกเป็นค่าทีละตัวในฟังก์ชัน

7. Destructuring 

ใช้แยกค่าจาก array หรือ object ออกมาเก็บไว้ในตัวแปรง่ายๆ เช่น
let [e] = nums2
let {id} = student
หรือ function studentId({ studentId })
